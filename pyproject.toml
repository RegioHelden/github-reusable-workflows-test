[project]
name = "github-workflow-test"
version = "0.1.0"
license = "MIT"
requires-python = ">=3.9"
description = "Just a test package to validate our GitHub actions"
readme = "README.md"
keywords = ["test", "dontuseme"]
authors = [
    { name = "Jens Nistler", email = "jens.nistler@regiohelden.de" }
]
maintainers = [
    { name = "Jens Nistler", email = "jens.nistler@regiohelden.de" }
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Topic :: Software Development :: Build Tools",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Private :: Do Not Upload",
]
dependencies = []

[project.urls]
Homepage = "https://github.com/RegioHelden/github-workflow-test"
Documentation = "https://github.com/RegioHelden/github-workflow-test/blob/main/README.md"
Repository = "https://github.com/RegioHelden/github-workflow-test.git"
Issues = "https://github.com/RegioHelden/github-workflow-test/issues"
Changelog = "https://github.com/RegioHelden/github-workflow-test/blob/main/CHANGELOG.md"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src/test_package"]

[tool.ruff]
exclude = [
    ".cache",
    ".git",
    "__pycache",
    "docs",
    "migrations",
    "src",
]
line-length = 119

[tool.ruff.lint]
dummy-variable-rgx = "_|dummy"
# See https://docs.astral.sh/ruff/rules/ for all supported rules
select = [
    "A",   # flake8-builtins
    "B",   # flake8-bugbear
    "BLE", # flake8-blind-except
    "C4",  # flake8-comprehensions
    "C90", # mccabe
    "COM", # flake8-commas
    "DJ",  # flake8-django
    "DTZ", # flake8-datetimez
    "E",   # pycodestyle
    "ERA", # eradicate
    "F",   # pyflakes
    "G",   # flake8-logging-format
    "I",   # isort
    "ICN", # flake8-import-conventions
    "INP", # flake8-no-pep420
    "N",   # pep8-naming
    "PIE", # flake8-pie
    "PGH", # pygrep-hooks
    "PL",  # pylint
    "PTH", # flake8-use-pathlib
    "RET", # flake8-return
    "RSE", # flake8-raise
    "RUF", # ruff-specific rules
    "S",   # flake8-bandit
    "SIM", # flake8-simplify
    "T20", # flake8-print
    "TID", # flake8-tidy-imports
    "UP",  # pyupgrade
    "W",   # pycodestyle
    "YTT", # flake8-2020
]

[tool.ruff.lint.pycodestyle]
max-line-length = 119

[tool.ruff.lint.mccabe]
max-complexity = 16
